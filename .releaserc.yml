branches:
  - release

ci: true
debug: false
dryRun: false
tagFormat: v${version} # https://semantic-release.gitbook.io/semantic-release/usage/configuration#tagformat

npmPublish: false

# Plugins
plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/github"


# Responsible for verifying conditions necessary to proceed with the release:
# configuration is correct, authentication token are valid, etc...
verifyConditions:
  - '@semantic-release/github'

# Responsible for determining the type of the next release (major, minor or patch).
# If multiple plugins with a analyzeCommits step are defined, the release type will be
# the highest one among plugins output.
# Look details at: https://github.com/semantic-release/commit-analyzer#configuration
analyzeCommits:
  - path: '@semantic-release/commit-analyzer'

# Responsible for publishing the release.
publish:
  - path: '@semantic-release/github'
    assets:
      - path: dist/cloudstack-terraform-provider_linux_amd64.zip
        name: cloudstack-terraform-provider_${nextRelease.version}_linux_amd64.zip
      - path: dist/cloudstack-terraform-provider_linux_arm64.zip
        name: cloudstack-terraform-provider_${nextRelease.version}_linux_arm64.zip
      - path: dist/cloudstack-terraform-provider_darwin_amd64.zip
        name: cloudstack-terraform-provider_${nextRelease.version}_darwin_amd64.zip
      - path: dist/cloudstack-terraform-provider_darwin_arm64.zip
        name: cloudstack-terraform-provider_${nextRelease.version}_darwin_arm64.zip
